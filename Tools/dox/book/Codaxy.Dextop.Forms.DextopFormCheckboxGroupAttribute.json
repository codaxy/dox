{
  "FullName": "Codaxy.Dextop.Forms.DextopFormCheckboxGroupAttribute",
  "Type": {
    "BaseTypes": [
      "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
      "System.Runtime.InteropServices._Attribute"
    ],
    "Namespace": "Codaxy.Dextop.Forms",
    "ProtectionLevel": 0,
    "TypeKind": 1,
    "Methods": [
      {
        "Parameters": [
          {
            "ParameterFlags": 0,
            "TypeName": "System.Int32",
            "Description": null,
            "DescriptionTree": null,
            "HasDescription": false,
            "Name": "level",
            "RefId": null
          }
        ],
        "ReturnDescription": null,
        "MemberFlag": 1,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormCheckboxGroupAttribute",
        "TypeName": null,
        "Description": "\n            Ext.form.CheckboxGroup (xtype: checkboxgroup)\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "DextopFormCheckboxGroupAttribute",
        "RefId": "#ctor(System.Int32)"
      },
      {
        "Parameters": [
          {
            "ParameterFlags": 0,
            "TypeName": "System.String",
            "Description": "Name of the member.",
            "DescriptionTree": null,
            "HasDescription": true,
            "Name": "memberName",
            "RefId": null
          },
          {
            "ParameterFlags": 0,
            "TypeName": "System.Type",
            "Description": "Type of the member.",
            "DescriptionTree": null,
            "HasDescription": true,
            "Name": "memberType",
            "RefId": null
          }
        ],
        "ReturnDescription": "",
        "MemberFlag": 40,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormCheckboxGroupAttribute",
        "TypeName": "Codaxy.Dextop.Forms.DextopFormContainer",
        "Description": "\n            Converts this attribute to a Dextop container.\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "ToContainer",
        "RefId": "ToContainer(System.String,System.Type)"
      }
    ],
    "Parameters": null,
    "Properties": [
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormCheckboxGroupAttribute",
        "TypeName": "System.Boolean",
        "Description": "\n            False to validate that at least one item in the group is checked\n            (defaults to true). \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "allowBlank",
        "RefId": "allowBlank"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormCheckboxGroupAttribute",
        "TypeName": "System.Boolean",
        "Description": "\n            True to distribute contained controls across columns, \n            completely filling each column top to bottom before starting on.\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "vertical",
        "RefId": "vertical"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormCheckboxGroupAttribute",
        "TypeName": "System.Int32",
        "Description": "\n            Leave empty to and controls will be rendered one per column on one row and the width of each column will be evenly distributed based on the width of the overall field container.\n            If you specify the number (e.g., 3) that number of columns will be created and the contained controls will be automatically distributed based on the value of vertical.\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "columns",
        "RefId": "columns"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormCheckboxGroupAttribute",
        "TypeName": "System.Double[]",
        "Description": "\n            Specify an array of column widths, mixing integer (fixed width) and float (percentage width) values as needed (e.g., [100, .25, .75]). Any integer values will be rendered first, then any float values will be calculated as a percentage of the remaining space. Float values do not have to add up to 1 (100%) although if you want the controls to take up the entire field container you should do so.\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "columnWidths",
        "RefId": "columnWidths"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormCheckboxGroupAttribute",
        "TypeName": "System.String",
        "Description": "\n            Gets or sets the field label.\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "fieldLabel",
        "RefId": "fieldLabel"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.Int32",
        "Description": "\n            Gets or sets the level. Use level to define a tree of items. All items with higher level belong to the first container of lower level.\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "Level",
        "RefId": "Level"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "title",
        "RefId": "title"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "xtype",
        "RefId": "xtype"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "itemId",
        "RefId": "itemId"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "layout",
        "RefId": "layout"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "margins",
        "RefId": "margins"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "fieldDefaults",
        "RefId": "fieldDefaults"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "defaults",
        "RefId": "defaults"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "style",
        "RefId": "style"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "bodyStyle",
        "RefId": "bodyStyle"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.Boolean",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "border",
        "RefId": "border"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.Boolean",
        "Description": "\n            \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "autoHeight",
        "RefId": "autoHeight"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String[]",
        "Description": "\n            List of items to be prepended to the items property. Note that items have to defined on the client side.\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "PrependItems",
        "RefId": "PrependItems"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            Raw JS to be added to the object\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "RawJS",
        "RefId": "RawJS"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String[]",
        "Description": "\n            List of items to be appended to the items property. Note that items have to defined on the client side.\n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "AppendItems",
        "RefId": "AppendItems"
      },
      {
        "CanRead": true,
        "CanWrite": true,
        "Parameters": null,
        "ReturnDescription": null,
        "MemberFlag": 0,
        "ProtectionLevel": 0,
        "DeclaringType": "Codaxy.Dextop.Forms.DextopFormContainerAttribute",
        "TypeName": "System.String",
        "Description": "\n            This value is what tells the layout how an item should be anchored to the container. \n            ",
        "DescriptionTree": null,
        "HasDescription": true,
        "Name": "anchor",
        "RefId": "anchor"
      }
    ],
    "Fields": null,
    "Events": null,
    "MemberDelegates": null,
    "FullName": "Codaxy.Dextop.Forms.DextopFormCheckboxGroupAttribute",
    "Description": "\n            Ext.form.CheckboxGroup (xtype: checkboxgroup)\n            ",
    "DescriptionTree": null,
    "HasDescription": true,
    "Name": "DextopFormCheckboxGroupAttribute",
    "RefId": null
  },
  "DbElement": null,
  "FormatCode": "cs",
  "Title": "DextopFormCheckboxGroupAttribute",
  "SearchItems": [
    {
      "SectionName": "DextopFormCheckboxGroupAttribute",
      "SectionDescription": "\n            Ext.form.CheckboxGroup (xtype: checkboxgroup)\n            ",
      "SectionType": 5
    },
    {
      "SectionName": "ToContainer",
      "SectionDescription": "\n            Converts this attribute to a Dextop container.\n            ",
      "SectionType": 5
    },
    {
      "SectionName": "allowBlank",
      "SectionDescription": "\n            False to validate that at least one item in the group is checked\n            (defaults to true). \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "vertical",
      "SectionDescription": "\n            True to distribute contained controls across columns, \n            completely filling each column top to bottom before starting on.\n            ",
      "SectionType": 4
    },
    {
      "SectionName": "columns",
      "SectionDescription": "\n            Leave empty to and controls will be rendered one per column on one row and the width of each column will be evenly distributed based on the width of the overall field container.\n            If you specify the number (e.g., 3) that number of columns will be created and the contained controls will be automatically distributed based on the value of vertical.\n            ",
      "SectionType": 4
    },
    {
      "SectionName": "columnWidths",
      "SectionDescription": "\n            Specify an array of column widths, mixing integer (fixed width) and float (percentage width) values as needed (e.g., [100, .25, .75]). Any integer values will be rendered first, then any float values will be calculated as a percentage of the remaining space. Float values do not have to add up to 1 (100%) although if you want the controls to take up the entire field container you should do so.\n            ",
      "SectionType": 4
    },
    {
      "SectionName": "fieldLabel",
      "SectionDescription": "\n            Gets or sets the field label.\n            ",
      "SectionType": 4
    },
    {
      "SectionName": "Level",
      "SectionDescription": "\n            Gets or sets the level. Use level to define a tree of items. All items with higher level belong to the first container of lower level.\n            ",
      "SectionType": 4
    },
    {
      "SectionName": "title",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "xtype",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "itemId",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "layout",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "margins",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "fieldDefaults",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "defaults",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "style",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "bodyStyle",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "border",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "autoHeight",
      "SectionDescription": "\n            \n            ",
      "SectionType": 4
    },
    {
      "SectionName": "PrependItems",
      "SectionDescription": "\n            List of items to be prepended to the items property. Note that items have to defined on the client side.\n            ",
      "SectionType": 4
    },
    {
      "SectionName": "RawJS",
      "SectionDescription": "\n            Raw JS to be added to the object\n            ",
      "SectionType": 4
    },
    {
      "SectionName": "AppendItems",
      "SectionDescription": "\n            List of items to be appended to the items property. Note that items have to defined on the client side.\n            ",
      "SectionType": 4
    },
    {
      "SectionName": "anchor",
      "SectionDescription": "\n            This value is what tells the layout how an item should be anchored to the container. \n            ",
      "SectionType": 4
    }
  ]
}